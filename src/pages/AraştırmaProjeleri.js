import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import '../styles/araÅŸtÄ±rmaprojeleri.css';

const projeTurleri = [
  "AB Ã§erÃ§eve programÄ±/NSF/ERC bilimsel araÅŸtÄ±rma projesinde koordinatÃ¶r/alt koordinatÃ¶r olmak",
  "AB Ã§erÃ§eve programÄ±/NSF/ERC bilimsel araÅŸtÄ±rma projesinde yÃ¼rÃ¼tÃ¼cÃ¼ olmak",
  "AB Ã§erÃ§eve programÄ±/NSF/ERC bilimsel araÅŸtÄ±rma projesinde araÅŸtÄ±rmacÄ± olmak",
  "AB Ã‡erÃ§eve ProgramÄ±/NSF/ERC dÄ±ÅŸÄ±ndaki uluslararasÄ± destekli projelerde koordinatÃ¶r olmak",
  "AB Ã‡erÃ§eve ProgramÄ±/NSF/ERC dÄ±ÅŸÄ±ndaki uluslararasÄ± destekli projelerde yÃ¼rÃ¼tÃ¼cÃ¼ olmak",
  "AB Ã‡erÃ§eve ProgramÄ±/NSF/ERC dÄ±ÅŸÄ±ndaki uluslararasÄ± destekli projelerde araÅŸtÄ±rmacÄ± olmak",
  "AB Ã‡erÃ§eve ProgramÄ±/NSF/ERC dÄ±ÅŸÄ±ndaki uluslararasÄ± destekli projelerde danÄ±ÅŸman olmak",
  "TÃœBÄ°TAK ARGE (ARDEB, TEYDEB) ve TÃœSEB projelerinde yÃ¼rÃ¼tÃ¼cÃ¼ olmak",
  "DiÄŸer TÃœBÄ°TAK projelerinde yÃ¼rÃ¼tÃ¼cÃ¼ olmak",
  "TÃœBÄ°TAK dÄ±ÅŸÄ± kamu projelerinde yÃ¼rÃ¼tÃ¼cÃ¼ olmak",
  "Sanayi projelerinde yÃ¼rÃ¼tÃ¼cÃ¼ olmak",
  "Ã–zel kuruluÅŸ projelerinde yÃ¼rÃ¼tÃ¼cÃ¼ olmak",
  "TÃœBÄ°TAK ARGE (ARDEB, TEYDEB) ve TÃœSEB projelerinde araÅŸtÄ±rmacÄ± olmak",
  "DiÄŸer TÃœBÄ°TAK projelerinde araÅŸtÄ±rmacÄ± olmak",
  "TÃœBÄ°TAK dÄ±ÅŸÄ± kamu projelerinde araÅŸtÄ±rmacÄ± olmak",
  "Sanayi projelerinde araÅŸtÄ±rmacÄ± olmak",
  "Ã–zel kuruluÅŸ projelerinde araÅŸtÄ±rmacÄ± olmak",
  "TÃœBÄ°TAK ARGE (ARDEB, TEYDEB) ve TÃœSEB projelerinde danÄ±ÅŸman olmak",
  "DiÄŸer TÃœBÄ°TAK projelerinde danÄ±ÅŸman olmak",
  "TÃœBÄ°TAK dÄ±ÅŸÄ± kamu projelerinde danÄ±ÅŸman olmak",
  "Sanayi projelerinde danÄ±ÅŸman olmak",
  "Ã–zel kuruluÅŸ projelerinde danÄ±ÅŸman olmak",
  "Ãœniversite BAP projelerinde yÃ¼rÃ¼tÃ¼cÃ¼ olmak",
  "Ãœniversite BAP projelerinde araÅŸtÄ±rmacÄ± olmak",
  "Ãœniversite BAP projelerinde danÄ±ÅŸman olmak",
  "4+ aylÄ±k yurtdÄ±ÅŸÄ± araÅŸtÄ±rma Ã§alÄ±ÅŸmasÄ±",
  "4+ aylÄ±k yurtiÃ§i araÅŸtÄ±rma Ã§alÄ±ÅŸmasÄ±",
  "TÃœBÄ°TAK 2209/2242 Ã¶ÄŸrenci projelerinde danÄ±ÅŸman olmak"
];

// Her proje iÃ§in puanlar
const projePuanlari = {
  1: 250, 2: 150, 3: 100, 4: 150, 5: 120, 6: 70, 7: 30, 8: 100,
  9: 50, 10: 40, 11: 40, 12: 20, 13: 50, 14: 25, 15: 20, 16: 20,
  17: 10, 18: 25, 19: 12, 20: 10, 21: 10, 22: 10, 23: 8,
  24: 6, 25: 3, 26: 100, 27: 50, 28: 10
};

function ArastirmaProjeleri() {
  const navigate = useNavigate();
  const [projelerData, setProjelerData] = useState(
    projeTurleri.map((tur, index) => ({
      id: index + 1,
      projeTuru: tur,
      projeAdi: '',
      projeNo: '',
      kurumAdi: '',
      yili: '',
      katildim: false
    }))
  );

  const handleChange = (id, e) => {
    const { name, value, type, checked } = e.target;
    setProjelerData(prev =>
      prev.map(p =>
        p.id === id
          ? { ...p, [name]: type === 'checkbox' ? checked : value }
          : p
      )
    );
  };
  const handleSubmit = async (e) => {
    e.preventDefault();
  
    const yapilanProjeler = projelerData
      .filter(p => p.katildim)
      .map(p => ({
        projeTuru: p.projeTuru,
        projeAdi: p.projeAdi,
        projeNo: p.projeNo,
        kurumAdi: p.kurumAdi,
        yili: p.yili,
        puan: projePuanlari[p.id] || 0
      }));
  
    const toplamPuan1_17 = yapilanProjeler
      .filter(p => p.id >= 1 && p.id <= 17)
      .reduce((acc, p) => acc + (p.puan || 0), 0);
  
    const toplamPuan1_22 = yapilanProjeler
      .filter(p => p.id >= 1 && p.id <= 22)
      .reduce((acc, p) => acc + (p.puan || 0), 0);
  
    const toplamPuan = yapilanProjeler
      .reduce((acc, p) => acc + (p.puan || 0), 0);
  
    try {
      // âœ… BÃ¶lÃ¼m H localStorage kayÄ±tlarÄ±
      localStorage.setItem('bolumH1_17', toplamPuan1_17);
      localStorage.setItem('bolumH1_22', toplamPuan1_22);
      localStorage.setItem('bolumH_toplam', toplamPuan);
  
      const response = await fetch('http://localhost:5000/api/projeler', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          projeler: yapilanProjeler,
          toplamPuan1_17,
          toplamPuan1_22,
          toplamPuan
        })
      });
  
      const contentType = response.headers.get('content-type');
  
      if (contentType && contentType.includes('application/json')) {
        const data = await response.json();
  
        if (response.ok) {
          console.log('BaÅŸarÄ±yla kaydedildi:', data);
          navigate('/DergiEditÃ¶rlÃ¼k'); // ðŸ”„ Sonraki sayfa
        } else {
          console.error('Hata oluÅŸtu:', data);
        }
      } else {
        const text = await response.text();
        console.error('Sunucudan beklenmeyen yanÄ±t:', text);
      }
    } catch (err) {
      console.error('GÃ¶nderim hatasÄ±:', err);
    }
  };
  

  return (
    <div className="toplanti-form">
      <h1>AraÅŸtÄ±rma Projeleri</h1>
      <form onSubmit={handleSubmit}>
        {projelerData.map(p => (
          <div key={p.id} className="faaliyet-box">
            <div className="proje-header">
              <h3>{p.id}) {p.projeTuru}</h3>
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  name="katildim"
                  checked={p.katildim}
                  onChange={(e) => handleChange(p.id, e)}
                />
                Bu projede yer aldÄ±m
              </label>
            </div>

            {p.katildim && (
              <div className="proje-detaylar">
                <label>Projenin AdÄ±:
                  <input
                    type="text"
                    name="projeAdi"
                    value={p.projeAdi}
                    onChange={(e) => handleChange(p.id, e)}
                    required
                  />
                </label>

                <label>Proje NumarasÄ±:
                  <input
                    type="text"
                    name="projeNo"
                    value={p.projeNo}
                    onChange={(e) => handleChange(p.id, e)}
                    required
                  />
                </label>

                <label>Kurum AdÄ±:
                  <input
                    type="text"
                    name="kurumAdi"
                    value={p.kurumAdi}
                    onChange={(e) => handleChange(p.id, e)}
                    required
                  />
                </label>

                <label>YÄ±lÄ±:
                  <input
                    type="text"
                    name="yili"
                    value={p.yili}
                    onChange={(e) => handleChange(p.id, e)}
                    required
                    placeholder="YYYY"
                  />
                </label>
              </div>
            )}
          </div>
        ))}
        <button type="submit">Dergi EditÃ¶rlÃ¼k SayfasÄ±na GeÃ§</button>
      </form>
    </div>
  );
}

export default ArastirmaProjeleri;
